; File strlen.casm
; This will calculate the length of testString
.global start
start:
   JMP <> stackSetup       ;Jump over the string
  
testString:
.dataAlpha This is a test string

stackSetup:
   MOV stack $S               ;Stack is now usable
codeStart:
   PUSH testString
   CALL strlen
   SUB #0x4 $S                  ;stack reset
loop:
   JMP <> loop

end:

;Following is the length calculation
;strlen(stringPointer)
strlen:
   MOV $S $A
   SUB #0x4 $A           ;Calculate parameter offset
   MEMR [4] $A $A      ;Get parameter in register A
   MOV $A $C              ;Keep pointer to string start
lenover:
   MEMR [1] $A $B
   CMP #0x00 $B        ;are we at the end of the string?
   JMP <E> gotlen
   ADD #0x1 $A
   JMP <> lenover      ;not at the end, jump back
gotlen:
   SUB $C $A             ;A will hold the len of the string at this point.
   RET                         ;return value in register A

; Stack is at the end of the program.
; No risk of overwriting the program
stack:
