; This is an attempt at using as many instructions as possible

.global start:

start:
MOV #0x40010000 $B

;MemRW
MEMW [1] #0xFF $B
MEMR [1] #0x40010000 $A
MEMR [1] $B $C

MOV #0xAA $A
MEMW [1] $A $B
MEMW [1] #0xBB #0x40020000
MOV #6 $A

;JumpR
JMPR <> #2 ;Jump over the next line
JMPR <> $A ;Jump over the next line
JMPR <> #-8 ;Jump back one line

MOV #6 $A
MOV #6 $B
CMP $A $B

JMPR <Z> #2 ;Jump the next line
JMPR <> $A ;Jump over the next line

MOV #6 $A
MOV #5 $B
CMP $A $B

JMPR <H> #2 ;Jump the next line
JMPR <> $A ;Jump over the next line

MOV #4 $A
MOV #5 $B
CMP $A $B

JMPR <L> #2 ;Jump the next line
JMPR <> $A ;Jump over the next line

XOR $B $B

;JumpRR
MOV #2 $C
MOV #6 $A
MOV #6 $B
CMP $A $B

JMPR <Z> $C ;Jump the next line
JMPR <> $A ;Jump over the next line

MOV #6 $A
MOV #5 $B
CMP $A $B

JMPR <H> $C ;Jump the next line
JMPR <> $A ;Jump over the next line

MOV #4 $A
MOV #5 $B
CMP $A $B

JMPR <L> $C ;Jump the next line
JMPR <> $A ;Jump over the next line

XOR $B $B

;JumpRRR
MOV #2 $C
MOV #6 $A
MOV #6 $B
CMP $A $B

JMPR <ZL> $C ;Jump the next line
JMPR <> $A ;Jump over the next line

MOV #6 $A
MOV #5 $B
CMP $A $B

JMPR <HZ> $C ;Jump the next line
JMPR <> $A ;Jump over the next line

MOV #4 $A
MOV #5 $B
CMP $A $B

JMPR <LE> $C ;Jump the next line
JMPR <> $A ;Jump over the next line

XOR $B $B

immreg:
MOV #0xFFFF0000 $A
AND #0x0000FFFF $A
OR #0xFFFFFFFF $A
XOR #0xFFFFFFEF $A
SHR #0x1 $A
SHR #0x3 $A
SHR #0x1 $A
MOV #0x1 $A
SHL #0x1 $A
SHL #30 $A
SHL #1 $A
XOR $A $A
ADD #0xFF $A
ADD #0x1 $A
SUB #0x1 $A
SUB #0xFF $A
SUB #0x1 $A
SUB #0xFFFFFFFF $A
MOV #0x05 $A
CMP #0x05 $A
CMP #0x04 $A
CMP #0x06 $A

;reg
MOV #0xFFFFFFFE $A
NOT $A
MOV #0x40000000 $S
MOV :function $A
CALL $A
PUSH $A
JMP <> :pastFunction

function:
MOV #1 $A
RET

pastFunction:
;regreg

MOV #0xFFFF0000 $A
MOV #0x0000FFFF $B
XOR $A $B
MOV #0xFFFF0000 $A
MOV #0x0000FFFF $B
ADD $A $B
MOV #1 $A
MOV #2 $B
SUB $B $A

MOV #4 $A
MOV #2 $B
MUL $A $B
MOV #2 $A
DIV $B $A

MOV #1 $A
MOV #1 $B
SHL $B $A
SHR $B $A
MOV #2 $B
AND $B $A
MOV #2 $A
AND $B $A

MOV #1 $A
MOV #2 $B
OR $B $A
OR $A $A

MOV #5 $A
MOV #5 $B
CMP $B $A

MOV #4 $B
CMP $B $A

MOV #6 $B
CMP $B $A

MOV $B $A


div:
mov #6 $a
mov #3 $b
div $a $b

mov #7 $a
mov #3 $b
div $a $b

MEMTEST:
MOV #0xAABBCCDD $A
MOV #0x40000000 $B
MEMW [1] $A $B

end: