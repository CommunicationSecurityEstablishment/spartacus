.global start:

start:
JMP <> :stackSetup

string:
.dataAlpha cdab

stackSetup:
MOV :stack $S ;Stack is now usable

codeStart:
    PUSH :string
    CALL :strlen
    SUB #0x4 $S ;stack reset
    JMP <> :codeStart
end:

;strlen(stringpointer)
strlen:
    MOV $S $A
    SUB #0x4 $A ;Calculate parameter offset, cant do pop, that would destroy the stack
    MEMR [4] $A $A ;Get parameter in register C
    MOV $A $C ;Keep pointer to string start
lenover:
    MEMR [1] $A $B
    CMP #0x00 $B  ;are we at the end of the string
    JMP <E> :gotlen
    ADD #0x1 $A
    JMP <> :lenover ;not at the end, jump back
gotlen:
    SUB $C $A ;A will hold the len of the string at this point.
    RET ;return value in register A
stack: